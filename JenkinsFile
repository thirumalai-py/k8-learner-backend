pipeline {
    agent any

    environment {
        GIT_REPO = "https://github.com/thirumalai-py/k8-learner-backend"
        AWS_REGION = "ap-south-1"
        ECR_REPO = "975050024946.dkr.ecr.ap-south-1.amazonaws.com/thirumalai-b10/learn-api"
        IMAGE_TAG = "dev-${BUILD_NUMBER}"
        AWS_ACCESS_KEY_ID = credentials('thiru-access-key-id')
        AWS_SECRET_ACCESS_KEY = credentials('thiru-secret-access-key')
        CLUSTER_NAME = "thiru-cluster-1"
    }

    stages {

        stage("Checkout Github Code") {
            steps {
                git(
                    url: "${GIT_REPO}",
                    branch: 'main',
                    credentialsId: 'thiru-github-access'
                )
            }
        }

        stage("Build Docker image") {
            steps {
                sh """
                    docker build -t ${ECR_REPO}:${IMAGE_TAG} .
                """
            }
        }

        stage("Login to ECR") {
            steps {
                sh """
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    export AWS_DEFAULT_REGION=${AWS_REGION}
                    echo "Login to AWS ECR.."

                    aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${ECR_REPO}
                """
            }
        }

        stage("Push Docker Image to ECR") {
            steps {
                sh """
                    echo "Push Image to the ECR"

                    docker push ${ECR_REPO}:${IMAGE_TAG}

                    echo "Image Pushed to ECR"

                """
            }
        }

        stage("Clean Up Docker Images") {
            steps {
                sh """
                    echo "Delete the docker images in jenkins"

                    docker rmi \$(docker images -q)

                """
            }
        }

        


        stage("Deploy to EKS ") {
            steps {
                sh """
                    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                    export AWS_DEFAULT_REGION=${AWS_REGION}
                    export KUBECONFIG=/tmp/kubeconfig

                    echo "Update Kubeconfig.."

                    aws eks update-kubeconfig \
                    --region ${AWS_REGION} \
                    --name ${CLUSTER_NAME} \
                    --kubeconfig \$KUBECONFIG

                    echo "Check nodes..."
                    kubectl --kubeconfig=\$KUBECONFIG get nodes

                    echo "Deploy helm"


                    helm upgrade --install learn-api ./learn-api \
                        -f ./learn-api/values.yaml \
                        --set-string image.repository=${ECR_REPO} \
                        --set-string image.tag=${IMAGE_TAG} \
                        --set-string database_url="mongodb+srv://thirumalaipy:SL2OuQmQhJs9UwFP@cluster0.1uz02.mongodb.net/learnerReport?retryWrites=true&w=majority" \
                        --set-string hash_key="thisIsMyHashKeydev" \
                        --set-string jwt_secret_key="thisIsMyJwtSecretKeyDev" \
                        --set replicaCount=2 \
                        --set service.port=80 \
                        --set service.targetPort=3001 \
                        --set-string service.type="LoadBalancer" \
                        --kubeconfig \$KUBECONFIG

                """
            }
        }
    }
}